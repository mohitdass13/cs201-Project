#include<stdio.h>
#include<stdlib.h>           // for using the malloc function
struct dict
 {
  char word[30],meaning[30];
  struct dict *left;
  struct dict *right; 
};
struct dict *root=NULL;

int check(char[],char[]);    // function for checking which word will come first.
void insert(struct dict *);  // function for inserting a new word in the dictionary.
void Search();               // function for searching a word in the dictionary. it will show the meaning of this word.
void view(struct dict *);    // function for viewing the entire library.

int check(char a[],char b[])
{
     int i;
     int j;
     int indicator;  
     for(i=0, j=0 ; a[i]!='\0'&&b[j]!='\0' ; i++, j++)
     {
       if(a[i]>b[j])
       {
         indicator=1;
         break;
       }
        else if(b[j]>a[i])
        {
          indicator=-1;
          break;
        }
       else
         indicator=0;
      }
     if(indicator==1)
       return 1;
      else if(indicator==-1)
        return -1;
      else
        return 0;
}

void Search()
{
  int indicator=0;
  struct dict *ptr;
  ptr=root;
  char w[10];
  printf("\nEnter word which you want to search:  \n");
  scanf("%s",w);
  while(ptr!=NULL && indicator==0){
    if(check(w,ptr->word)>0)
       ptr=ptr->right;
    else if(check(w,ptr->word)<0)
          ptr=ptr->left;
    else if(check(w,ptr->word)==0){
       indicator=1;
       printf("\n%s",ptr->meaning);
    }

    }
    if(indicator==0)
      printf("\nWord not found\n");
}

void insert(struct dict *temp)
{
  int flag=0;
  struct dict *ptr,*poi;
  ptr=root;

  if(root==NULL)
     root=temp;
  else
  {
     while(ptr!=NULL)
     {
       if(check(temp->word,ptr->word)>0)
       {
         poi=ptr;
         ptr=ptr->right;
       }

       else if(check(temp->word,ptr->word)<0)
     {
       poi=ptr;
       ptr=ptr->left;
     }
       else if(check(temp->word,ptr->word)==0){
          flag=1;
            printf("\nWord exists!!\n");
          break;
       }

   }
       if(flag==0 && ptr==NULL){

         if(check(poi->word,temp->word)==1)
            poi->left=temp;
         else if(check(poi->word,temp->word)==-1)
            poi->right=temp;
       }

     }

}

void view(struct dict *ptr)
{
  if(root==NULL)
    printf("\nDictionary is Empty. \n");

  else if(ptr!=NULL)
  {
   view(ptr->left);

   printf("\nWord: %s\n",ptr->word);
   printf("\nMeaning: %s\n",ptr->meaning);
   view(ptr->right);
  }

}

int main(int argc, char const *argv[])
{
  int choice;
  struct dict *temp;
  while(choice!=4)
  {
    printf("\nEnter the choice\n1.Search a word in the dictionary\n2.Insert a new word in the dictionary\n3.View all the words of the dictionary\n4.Exit\n");
    scanf("%d",&choice);
    switch (choice)
    {
      case 1: Search();
      break;
      case 2:
      temp=(struct dict*)malloc(sizeof(struct dict));
      temp->left=NULL;
      temp->right=NULL;
      printf("\nEnter the word to be inserted :\n");
      scanf("%s",temp->word);
      printf("\nEnter the meaning of word :\n");
      scanf("%s",temp->meaning);
      insert(temp);
      break;
      case 3:
      view(root);
      break;
      case 4:exit(0);       // for quit the program
    }
  }
  return 0;
}
